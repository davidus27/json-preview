{"version":3,"file":"static/js/75.c8b2e469.chunk.js","mappings":"AAAAA,UAAaC,IACX,MAAM,GAAEC,EAAE,OAAEC,EAAM,QAAEC,GAAYH,EAAEI,KAElC,IACE,IAAIC,EAEJ,OAAQH,GACN,IAAK,cACHG,EA0CR,SAA2BD,EAAME,GAC/B,MAAMC,EAbR,SAAwBC,EAAKF,GAC3B,IACE,OAAOA,EAAKG,QAAO,CAACC,EAAKC,KACvB,GAAW,MAAPD,EACJ,OAAOA,EAAIC,EAAI,GACdH,EACL,CAAE,MAAOR,GACP,MACF,CACF,CAIgBY,CAAeR,EAAME,GAEnC,OAAc,OAAVC,EACK,CAAEM,KAAM,OAAQN,MAAO,WAGlBO,IAAVP,EACK,CAAEM,KAAM,aAGbE,MAAMC,QAAQT,GACT,CAAEM,KAAM,QAASI,OAAQV,EAAMU,QAGnB,kBAAVV,EACF,CAAEM,KAAM,SAAUI,OAAQC,OAAOC,KAAKZ,GAAOU,QAG/C,CAAEJ,KAAM,YAAaN,QAC9B,CA9DiBa,CAAkBjB,EAAQC,KAAMD,EAAQG,MACjD,MAEF,IAAK,SAKL,IAAK,cAKL,IAAK,YAEHD,EAAS,CAAEQ,KAAM,mBACjB,MAEF,QACE,MAAM,IAAIQ,MAAM,mBAAmBnB,KAGvCoB,YAAY,CAAErB,KAAII,UAEpB,CAAE,MAAOkB,GACPD,YAAY,CAAErB,KAAIuB,MAAOD,EAAIE,SAC/B","sources":["services/worker.js"],"sourcesContent":["onmessage = (e) => {\n  const { id, action, payload } = e.data;\n\n  try {\n    let result;\n\n    switch (action) {\n      case 'getNodeInfo':\n        result = handleGetNodeInfo(payload.data, payload.path);\n        break;\n\n      case 'search':\n        // stub: implement if needed\n        result = { type: 'not_implemented' };\n        break;\n\n      case 'collapseAll':\n        // stub\n        result = { type: 'not_implemented' };\n        break;\n\n      case 'expandAll':\n        // stub\n        result = { type: 'not_implemented' };\n        break;\n\n      default:\n        throw new Error(`Unknown action: ${action}`);\n    }\n\n    postMessage({ id, result });\n\n  } catch (err) {\n    postMessage({ id, error: err.message });\n  }\n};\n\n// Helper: Navigate to the value at the given path\nfunction getValueAtPath(obj, path) {\n  try {\n    return path.reduce((acc, key) => {\n      if (acc == null) return undefined;\n      return acc[key];\n    }, obj);\n  } catch (e) {\n    return undefined;\n  }\n}\n\n// Handler for getNodeInfo\nfunction handleGetNodeInfo(data, path) {\n  const value = getValueAtPath(data, path);\n\n  if (value === null) {\n    return { type: 'null', value: null };\n  }\n\n  if (value === undefined) {\n    return { type: 'undefined' };\n  }\n\n  if (Array.isArray(value)) {\n    return { type: 'array', length: value.length };\n  }\n\n  if (typeof value === 'object') {\n    return { type: 'object', length: Object.keys(value).length };\n  }\n\n  return { type: 'primitive', value };\n}\n"],"names":["onmessage","e","id","action","payload","data","result","path","value","obj","reduce","acc","key","getValueAtPath","type","undefined","Array","isArray","length","Object","keys","handleGetNodeInfo","Error","postMessage","err","error","message"],"sourceRoot":""}