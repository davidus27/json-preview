onmessage=e=>{const{data:t,query:r}=e.data,n=!r||!r.trim(),o=(e,t,r)=>!!n||r.every((r=>r.some((r=>{let{key:n,value:o}=r;const s=(e,t,r)=>String(e).toLowerCase()===n&&String(t).toLowerCase()===o||r.toLowerCase().includes(`${n}:${o}`);if("object"!==typeof e||null===e)return s(t[t.length-1],e,t.join("."));for(const[l,a]of Object.entries(e)){const e=[...t,l].join(".");if(s(l,a,e))return!0}return!1})))),s=(l=r,n?[]:l.split(/\s*&\s*/i).map((e=>e.split(/\s*\|\s*/i).map((e=>{const[t,r]=e.split(":");return t&&r?{key:t.trim().toLowerCase(),value:r.trim().toLowerCase()}:null})).filter(Boolean))));var l;const a=(e,t,r)=>{const n=[...r,t];if(null!==e&&"object"===typeof e){const r=(Array.isArray(e)?e.map(((e,t)=>[t,e])):Object.entries(e)).map((e=>{let[t,r]=e;return a(r,t,n)})).filter((e=>null!==e)),l=o(e,n,s);return l||r.length>0?{key:t,value:e,path:n,matches:l,children:r}:null}return o(e,n,s)?{key:t,value:e,path:n,matches:!0}:null};let i=[];if(null!==t&&"object"===typeof t)i=(Array.isArray(t)?t.map(((e,t)=>[t,e])):Object.entries(t)).map((e=>{let[t,r]=e;return a(r,t,[])})).filter(Boolean);else{const e=a(t,"root",[]);e&&(i=[e])}postMessage(i)};
//# sourceMappingURL=tree-filter.worker.e41bb0b2.worker.js.map